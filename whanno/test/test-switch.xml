<project xmlns:c="antlib:it.haefelinger.flaka" name="test-switch" default="test-switch-glob">
	<macrodef name="expect">
		<attribute name="cand" />
		<attribute name="this" />
		<sequential>
			<c:unless test=" '@{this}' == '@{cand}' ">
				<fail message="unexpected '@{cand}', expected '@{this}'" />
			</c:unless>
		</sequential>
	</macrodef>

	<!--:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::-->
	<!--:: T E S T  C A S E S                                                ::-->
	<!--:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::-->

	<target name="test-switch-matches">
		<fail if="pass" />
		<c:switch value="foo" debug="true">
			<matches pat="o">
				<fail />
			</matches>
			<otherwise>
				<property name="pass" value="true" />
			</otherwise>
		</c:switch>
		<fail unless="pass" />
		<c:unset>
	  pass
		</c:unset>
		<fail if="pass" />
		<c:switch value="foo" debug="false">
			<matches pat="foo|bar">
				<fail />
			</matches>
		</c:switch>

		<c:switch value="foo" debug="false">
			<matches re="foo|bar" />
			<default>
				<fail />
			</default>
		</c:switch>

		<c:switch value="xfoox" debug="false">
			<matches re="foo|bar">
				<fail />
			</matches>
		</c:switch>

		<c:switch value="xfoox" debug="false">
			<matches re="foo|bar" find="true" />
			<otherwise>
				<fail />
			</otherwise>
		</c:switch>


		<c:switch value="foobar" debug="false">
			<matches pat="*ob*" />
			<default>
				<fail />
			</default>
		</c:switch>

		<c:switch value="foobar" debug="false">
			<matches pat="o*b">
				<fail />
			</matches>
			<default />
		</c:switch>

		<c:switch value="foobar" debug="false">
			<matches pat="o*b" find="true" />
			<default>
				<fail />
			</default>
		</c:switch>

		<c:switch value="foobar" debug="false">
			<matches re="ob">
				<fail />
			</matches>
			<default />
		</c:switch>

		<c:switch value="foobar" debug="false">
			<matches re="ob" find="true" />
			<default>
				<fail />
			</default>
		</c:switch>

		<fail if="pass" />
		<fail if="unreachable" />
		<c:trycatch>
			<try>
				<c:switch value="foo bar" debug="false">
					<matches re="*bar" />
				</c:switch>
				<property name="unreachable" value="true" />
			</try>
			<catch>
				<property name="pass" value="true" />
			</catch>
			<else>
				<fail />
			</else>
			<finally>
				<fail unless="pass" />
				<fail if="unreachable" />
				<c:unset>
					pass
					</c:unset>
			</finally>
		</c:trycatch>
		<fail if="pass" />
		<fail if="unreachable" />


		<c:switch value="foo bar" debug="false">
			<matches pat="*bar" />
			<default>
				<fail />
			</default>
		</c:switch>

		<c:switch value="a.tgz">
			<matches pat="*.jar">
				<fail />
			</matches>
			<matches re="(.*).war/">
				<fail />
			</matches>
			<matches re=".*(zip|tgz)" />
			<default>
				<fail />
			</default>
		</c:switch>


		<c:switch value="v-uat_3_20_500" var="g">
			<matches re="v-(?:([^\d][^_]*)_)?(\d.*)">
				<c:echo>
          #{g[0]}
        </c:echo>
				<expect cand="#{g}" this="v-uat_3_20_500" />
				<expect cand="#{g.n}" this="2" />
				<expect cand="#{g[0]}" this="v-uat_3_20_500" />
				<expect cand="#{g[1]}" this="uat" />
				<expect cand="#{g[2]}" this="3_20_500" />
				<expect cand="#{g[3]}" this="" />
				<expect cand="#{g[1].s}" this="2" />
				<expect cand="#{g[1].e}" this="5" />
				<expect cand="#{g.p}" this="v-(?:([^\d][^_]*)_)?(\d.*)" />
			</matches>
		</c:switch>
	</target>

	<target name="test-switch-glob">
		<c:switch value="foo" debug="true">
			<glob expr="foo|bar">
				<fail />
			</glob>
			<glob expr="fo">
				<fail />
			</glob>
			<glob expr="*fo">
				<fail />
			</glob>
			<glob expr="oo">
				<fail />
			</glob>
			<glob expr="f*">
				<!-- pass -->
			</glob>
			<otherwise>
				<fail />
			</otherwise>
		</c:switch>

		<c:switch value="foobar" debug="false">
			<matches pat="*ob*" />
			<default>
				<fail />
			</default>
		</c:switch>

		<c:switch value="foo bar" debug="false">
			<matches pat="*bar" />
			<default>
				<fail />
			</default>
		</c:switch>
	</target>

	<target name="test-switch-glob-with-el">
		<c:let>
      foo = 'foo'
      glob = ' f*'
    </c:let>
		<fail if="pass" />
		<c:switch value=" #{foo} " debug="true">
			<glob expr=" f*">
				<property name="pass" value="true" />
			</glob>
			<otherwise>
				<fail />
			</otherwise>
		</c:switch>
		<fail unless="pass" />
		<c:unset>
      pass
    </c:unset>
		<fail if="pass" />
		<!-- Again, this time using EL in case -->
		<c:switch value=" #{foo} " debug="true">
			<glob expr="#{glob}">
				<property name="pass" value="true" />
			</glob>
			<otherwise>
				<fail />
			</otherwise>
		</c:switch>
		<fail unless="pass" />
		<c:unset>
      pass
    </c:unset>
		<fail if="pass" />
	</target>

	<target name="test-switch-re-with-el">
		<c:let>
      expr = ' fo{2} '
    </c:let>
		<fail if="pass" />
		<c:switch value=" foo " debug="true">
			<re expr="#{expr}">
				<property name="pass" value="true" />
			</re>
			<otherwise>
				<fail />
			</otherwise>
		</c:switch>
		<fail unless="pass" />
		<c:unset>
      pass
    </c:unset>
		<fail if="pass" />
	</target>

	<target name="test-switch-cmp-with-el">
		<c:let>
      val = 'b'
    </c:let>
		<fail if="pass" />
		<c:switch value=" a " debug="true">
			<cmp lt=" #{val} ">
				<property name="pass" value="true" />
			</cmp>
			<otherwise>
				<fail />
			</otherwise>
		</c:switch>
		<fail unless="pass" />
		<c:unset>
      pass
    </c:unset>
		<fail if="pass" />
	</target>

	<target name="test-switch-re">
		<c:switch value="foo" debug="false">
			<re expr="foo|bar">
			</re>
			<otherwise>
				<fail />
			</otherwise>
		</c:switch>

		<c:switch value="xfoox" debug="false">
			<re expr="foo|bar" find="true"/>
			<otherwise>
				<fail />
			</otherwise>
		</c:switch>

		<c:switch value="foobar" debug="false">
			<re expr="ob" find="true"/>
			<default>
				<fail />
			</default>
		</c:switch>

		<c:switch value="foo bar" debug="false">
			<re expr="*bar" literally="true">
				<fail />
			</re>
		</c:switch>
	</target>

	<target name="test-switch-re-with-groups">
		<c:switch value="a.tgz">
			<re expr="(.*)\.([^.]+)">
				<c:echo>extension = #{g}</c:echo>
			</re>
			<default>
				<fail />
			</default>
		</c:switch>

		<c:switch value="v-uat_3_20_500" var="g">
			<re expr="v-(?:([^\d][^_]*)_)?(\d.*)">
				<expect cand="#{g}" this="v-uat_3_20_500" />
				<expect cand="#{g.n}" this="2" />
				<expect cand="#{g[0]}" this="v-uat_3_20_500" />
				<expect cand="#{g[1]}" this="uat" />
				<expect cand="#{g[2]}" this="3_20_500" />
				<expect cand="#{g[3]}" this="" />
				<expect cand="#{g[1].s}" this="2" />
				<expect cand="#{g[1].e}" this="5" />
				<expect cand="#{g.p}" this="v-(?:([^\d][^_]*)_)?(\d.*)" />
			</re>
			<default>
				<fail />
			</default>
		</c:switch>
	</target>



	<target name="test-switch-useless">
		<!-- useless but legal -->
		<c:switch value="foobar=" debug="false" />

		<c:switch value="foo bar" debug="true">
			<default />
		</c:switch>
	</target>

	<target name="test-switch-cmp">
		<fail if="eq_detected" />
		<fail if="lt_detected" />
		<fail if="gt_detected" />
		<c:switch value="a">
			<cmp lt="b">
				<property name="lt_detected" value="true" />
			</cmp>
			<cmp gt="b">
				<fail />
			</cmp>
			<cmp eq="b">
				<fail />
			</cmp>
			<default>
				<fail />
			</default>
		</c:switch>
		<c:switch value="b">
			<cmp lt="b">
				<fail />
			</cmp>
			<cmp gt="b">
				<fail />
			</cmp>
			<cmp eq="b">
				<property name="eq_detected" value="true" />
			</cmp>
			<default>
				<fail />
			</default>
		</c:switch>
		<c:switch value="c">
			<cmp lt="b">
				<fail />
			</cmp>
			<cmp gt="b">
				<property name="gt_detected" value="true" />
			</cmp>
			<cmp eq="b">
				<fail />
			</cmp>
			<default>
				<fail />
			</default>
		</c:switch>
		<fail unless="eq_detected" />
		<fail unless="lt_detected" />
		<fail unless="gt_detected" />
		<c:unset>
      eq_detected
      lt_detected
      gt_detected
    </c:unset>
		<fail if="eq_detected" />
		<fail if="lt_detected" />
		<fail if="gt_detected" />
	</target>

 <target name="test-switch-pathological" >
 	<c:switch />
 	<c:switch value="x">
 		<re />
 		<otherwise><fail/></otherwise>   
 	</c:switch>
 	<c:switch value="x">
 	      <glob />
 	      <otherwise><fail/></otherwise>    
 	  </c:switch>
 	<c:switch value="x">
 	    <cmp />
      <otherwise><fail/></otherwise>		
 	</c:switch>
 	
 </target>
	
</project>