<project xmlns:c="antlib:it.haefelinger.flaka">
<target name="test-case">
  <c:let>
    ;; this task is not yet ready
    ready = false
  </c:let>
  <c:when test=" ready " >
    <delete dir="${basedir}/d1" />
    <delete dir="${basedir}/d2" />
    <delete dir="${basedir}/d3" />
    
    <c:fail test="  '${basedir}/d1'.tofile.exists "/>
    <c:fail test="  '${basedir}/d2'.tofile.exists "/>
    <c:fail test="  '${basedir}/d3'.tofile.exists "/>
    
    <mkdir dir="${basedir}/d1" />
    <mkdir dir="${basedir}/d2" />
    <mkdir dir="${basedir}/d3/zzz" />
    
    <c:fail test="  not '${basedir}/d1'.tofile.isdir "/>
    <c:fail test="  not '${basedir}/d2'.tofile.isdir "/>
    <c:fail test="  not '${basedir}/d3/zzz'.tofile.isdir "/>
    
    <echo message="Java1.java" file="${basedir}/d1/Java1.java" />
    <echo message="Java3.java" file="${basedir}/d3/zzz/Java3.java" />
    
    <c:fail test="  not '${basedir}/d1/Java1.java'.tofile.isfile "/>
    <c:fail test="  not '${basedir}/d3/zzz/Java3.java'.tofile.isfile "/>
    
    
    <c:list var="L">
      "${basedir}/d1"
      "${basedir}/d2" 
      "${basedir}/d3"
    </c:list>
    
    <!--  scan for files in folders given by L, stop with first matching
         folder. Var will contain matching files.
    -->
    <c:set-if-have-file var="x" in=" L ">
      <filter>
        <include name="**/*.java" />
      </filter>
    </c:set-if-have-file>

    <c:echo>
      empty  x => #{empty x}
      sizeof x => #{sizeof(x) }
      typeof x => #{typeof(x) }
      
      #1       => #{x[0]}
      #2       => #{x[1]}
      
      typeof(#1) => #{ typeof(x[0]) }
      typeof(#2) => #{ typeof(x[1]) }
      typeof(#2[0]) => #{ typeof((x[1])[0]) }
    </c:echo>
  </c:when>

</target>
</project>