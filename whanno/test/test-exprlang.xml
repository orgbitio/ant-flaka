<project xmlns:c="antlib:it.haefelinger.flaka">
<target name="test-case">
	<fail if="x" />
	<c:unless test=" empty property.x">
		<fail message="[1] empty property.x" />
	</c:unless>
	<property name="x" value="" />
	<fail unless="x" />
	<c:unless test="empty property.x">
		<fail message="[2] empty property.x" />
	</c:unless>
        <c:unset>x</c:unset>
	<fail if="x" />
	<property name="x" value=" " />
	<fail unless="x" />
	<c:when test="empty property.x">
		<fail message="[3] empty property.x: |${x}|" />
	</c:when>

	<!-- make empty variable z -->
	<c:unset>z</c:unset>
	<c:when test=" z ">
		<fail message="[4]  isnil" />
  	</c:when>
	<c:let>
          z = 
        </c:let>
	<c:when test=" z ">
		<fail message="[5]  isnil" />
	</c:when>
	<c:let>
          z = 
        </c:let>
	<c:when test="z">
		<fail message="[6]  isnil" />
	</c:when>
	<c:let>
           z = ''
        </c:let>
	<c:when test="not has.var.z">
		<fail message="[7a]  reference to z must exits by now?" />
	</c:when>
	<c:unless test="not z">
		<fail message="[7b] empty" />
 	 </c:unless>
	<c:unless test="empty z">
		<fail message="[7c] empty" />
 	 </c:unless>
  <c:let>
    z = ' '
  </c:let>
  <c:when test="empty z">
    <fail message="[9]" />
  </c:when>
	
  
  <!-- TODO: empty string evaluates to basedir -->
  <c:when test=" not ''.tofile.isdir">
    <c:echo>#{''.tofile}</c:echo>
    <fail message="[10] ${basedir} exists." />
  </c:when>

  <c:unless test=" '${basedir}'.tofile.isdir ">
    <fail message="[11] ${basedir} exists." />
  </c:unless>
	
  <c:when test=" 'shall-not-exist'.tofile ">
    <c:echo>#{'shall-not-exists'.tofile}</c:echo>
	<fail message="[12] shall-not-exist exists??" />
  </c:when>

  

</target>
</project>